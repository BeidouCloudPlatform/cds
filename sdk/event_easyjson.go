// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  sdk

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( Event ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Event ) UnmarshalJSON([]byte) error { return nil }
func ( Event ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Event ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Event *Event

func ( EventEngine ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventEngine ) UnmarshalJSON([]byte) error { return nil }
func ( EventEngine ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventEngine ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventEngine *EventEngine

func ( EventFilter ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventFilter ) UnmarshalJSON([]byte) error { return nil }
func ( EventFilter ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventFilter ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventFilter *EventFilter

func ( EventJob ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventJob ) UnmarshalJSON([]byte) error { return nil }
func ( EventJob ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventJob ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventJob *EventJob

func ( EventMaintenance ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventMaintenance ) UnmarshalJSON([]byte) error { return nil }
func ( EventMaintenance ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventMaintenance ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventMaintenance *EventMaintenance

func ( EventNotif ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventNotif ) UnmarshalJSON([]byte) error { return nil }
func ( EventNotif ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventNotif ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventNotif *EventNotif

func ( EventRunWorkflow ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventRunWorkflow ) UnmarshalJSON([]byte) error { return nil }
func ( EventRunWorkflow ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventRunWorkflow ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventRunWorkflow *EventRunWorkflow

func ( EventRunWorkflowJob ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventRunWorkflowJob ) UnmarshalJSON([]byte) error { return nil }
func ( EventRunWorkflowJob ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventRunWorkflowJob ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventRunWorkflowJob *EventRunWorkflowJob

func ( EventRunWorkflowNode ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventRunWorkflowNode ) UnmarshalJSON([]byte) error { return nil }
func ( EventRunWorkflowNode ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventRunWorkflowNode ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventRunWorkflowNode *EventRunWorkflowNode

func ( EventRunWorkflowOutgoingHook ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventRunWorkflowOutgoingHook ) UnmarshalJSON([]byte) error { return nil }
func ( EventRunWorkflowOutgoingHook ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventRunWorkflowOutgoingHook ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventRunWorkflowOutgoingHook *EventRunWorkflowOutgoingHook

func ( EventSubscription ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EventSubscription ) UnmarshalJSON([]byte) error { return nil }
func ( EventSubscription ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EventSubscription ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EventSubscription *EventSubscription
